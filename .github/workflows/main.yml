# ফাইলের নাম: .github/workflows/main.yml

name: Build Kivy Android App (Release APK)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-android:
    name: Build Signed Release APK
    runs-on: ubuntu-22.04

    steps:
      # ধাপ ১: রিপোজিটরির কোড চেকআউট করা
      - name: Checkout repository
        uses: actions/checkout@v4

      # ধাপ ২: সিস্টেম ডিপেন্ডেন্সি ইনস্টল করা
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git \
            zip \
            unzip \
            openjdk-11-jdk \
            python3-pip \
            python3-setuptools \
            autoconf \
            build-essential \
            libssl-dev \
            libffi-dev \
            python3-venv \
            wget \
            curl

      # ধাপ ৩: Python এবং Buildozer সেটআপ করা
      - name: Set up Python and Buildozer
        run: |
          python3 --version
          pip3 install --upgrade pip
          pip3 install buildozer cython==0.29.33 virtualenv

      # ধাপ ৪: Keystore তৈরি করা
      - name: Generate Keystore
        env:
          RELEASE_PASSWORD: ${{ secrets.RELEASE_PASSWORD }}
          RELEASE_ALIAS: ${{ secrets.RELEASE_ALIAS }}
        run: |
          echo "Generating Keystore..."
          keytool -genkey -v \
            -keystore release.keystore \
            -alias $RELEASE_ALIAS \
            -keyalg RSA -keysize 2048 -validity 10000 \
            -storepass $RELEASE_PASSWORD \
            -keypass $RELEASE_PASSWORD \
            -dname "CN=Md Samiul Islam, OU=Development, O=SamiulDev, L=Dhaka, ST=Dhaka, C=BD" \
            -noprompt
          echo "Keystore generated successfully."

      # ধাপ ৫: buildozer.spec আপডেট করা (সরলীকৃত)
      - name: Update buildozer.spec for release
        env:
          RELEASE_PASSWORD: ${{ secrets.RELEASE_PASSWORD }}
          RELEASE_ALIAS: ${{ secrets.RELEASE_ALIAS }}
        run: |
          echo "Updating buildozer.spec for release signing..."
          
          # সরাসরি sed দিয়ে মানগুলো আপডেট করা
          sed -i "s|android.release_key.alias = .*|android.release_key.alias = $RELEASE_ALIAS|" buildozer.spec
          sed -i "s|android.release_key.store_password = .*|android.release_key.store_password = $RELEASE_PASSWORD|" buildozer.spec
          sed -i "s|android.release_key.alias_password = .*|android.release_key.alias_password = $RELEASE_PASSWORD|" buildozer.spec
          
          echo "Updated buildozer.spec successfully"
          echo "Show release key settings:"
          cat buildozer.spec | grep "android.release_key" || echo "No release key lines found, but continuing..."

      # ধাপ ৬: Buildozer ইনিশিয়ালাইজেশন
      - name: Initialize Buildozer
        run: |
          buildozer android clean

      # ধাপ ৭: APK বিল্ড করা
      - name: Build APK with Buildozer
        run: |
          echo "Starting APK build..."
          buildozer -v android release
          echo "Build completed!"

      # ধাপ ৮: APK আপলোড করা
      - name: Upload Signed APK
        uses: actions/upload-artifact@v4
        with:
          name: signed-release-apk
          path: bin/*.apk
          retention-days: 7

      # ধাপ ৯: বিল্ড লগ সংরক্ষণ
      - name: Upload Build Logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-logs
          path: .buildozer/
          retention-days: 3
