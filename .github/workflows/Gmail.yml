# ফাইলের নাম: .github/workflows/main.yml

name: Build Android APK (Stable & Verified)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-android:
    name: Build APK with P4A - Stable
    runs-on: ubuntu-22.04

    steps:
      # ধাপ ১: রিপোজিটরির কোড চেকআউট করা (নির্দিষ্ট ভার্সন)
      - name: Checkout repository
        uses: actions/checkout@v4.1.7

      # ধাপ ২: Java 17 সেটআপ করা (আধুনিক অ্যান্ড্রয়েড বিল্ডের জন্য)
      - name: Set up JDK 17
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '17'
          distribution: 'temurin'

      # ধাপ ৩: NDK 25b ডাউনলোড এবং সেটআপ (এই ভার্সন p4a-এর জন্য পরীক্ষিত ও স্থিতিশীল)
      - name: Download and set up NDK 25b
        run: |
          wget https://dl.google.com/android/repository/android-ndk-r25b-linux.zip -O android-ndk-r25b-linux.zip
          unzip -q android-ndk-r25b-linux.zip
          echo "ANDROID_NDK_HOME=$(pwd)/android-ndk-r25b" >> $GITHUB_ENV
          echo "NDK path set to: $(pwd)/android-ndk-r25b"

      # ধাপ ৪: Python 3.11 সেটআপ করা (নির্দিষ্ট ভার্সন)
      - name: Set up Python 3.11
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.11'
      
      # ধাপ ৫: পাইথন লাইব্রেরির জন্য ক্যাশিং (বিল্ড দ্রুত করার জন্য)
      - name: Cache Pip dependencies
        uses: actions/cache@v4.0.2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/main.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # ধাপ ৬: প্রয়োজনীয় পাইথন লাইব্রেরি ইনস্টল করা (সবগুলো ভার্সন পিন করা)
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install "cython==0.29.37"
          pip install "kivy==2.3.0"
          pip install "python-for-android==2024.05.21"

      # ধাপ ৭: Start.io Ads SDK ডাউনলোড করা (নতুন এবং স্থিতিশীল লিংক থেকে)
      - name: Download Start.io Ads SDK
        run: |
          mkdir -p libs
          # Maven Central থেকে সরাসরি ডাউনলোড, এটি সবচেয়ে নির্ভরযোগ্য পদ্ধতি
          wget https://repo1.maven.org/maven2/com/startapp/inapp-sdk/4.11.4/inapp-sdk-4.11.4.aar -O libs/inapp-sdk.aar
          echo "Start.io SDK v4.11.4 downloaded successfully."
          # ডাউনলোড সফল হয়েছে কিনা তা নিশ্চিত করার জন্য ফাইল তালিকা দেখা
          ls -l libs/

      # ধাপ ৮: Keystore তৈরি করা
      - name: Create Keystore
        env:
          KEY_PASSWORD: ${{ secrets.RELEASE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.RELEASE_ALIAS }}
        run: |
          keytool -genkey -v -keystore release.keystore -alias "$KEY_ALIAS" -keyalg RSA -keysize 2048 -validity 10000 -storepass "$KEY_PASSWORD" -keypass "$KEY_PASSWORD" -dname "CN=Md Samiul Islam, OU=Development, O=SamiulDev, L=Dhaka, ST=Dhaka, C=BD" -noprompt

      # ধাপ ৯: P4A দিয়ে APK বিল্ড করা (আপনার অনুরোধ অনুযায়ী)
      - name: Build APK with P4A
        env:
          KEY_PASSWORD: ${{ secrets.RELEASE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.RELEASE_ALIAS }}
        run: |
          p4a apk \
            --requirements=python3,kivy==2.3.0,jnius,sqlite3,openssl \
            --package=com.samiul.minifire \
            --name="MINI FIRE" \
            --version=1.0.0 \
            --bootstrap=sdl2 \
            --dist_name=minifire \
            --arch=arm64-v8a \
            --orientation=portrait \
            --window \
            --release \
            --android-api=34 \
            --permission=INTERNET \
            --permission=ACCESS_NETWORK_STATE \
            --add-aar=libs/inapp-sdk.aar \
            --keystore=release.keystore \
            --keystore-password="$KEY_PASSWORD" \
            --signkey-alias="$KEY_ALIAS" \
            --signkey-password="$KEY_PASSWORD" \
            --private=. \
            --verbose

      # ধাপ ১০: বিল্ড হওয়া APK ফাইল আপলোড করা (নির্দিষ্ট ভার্সন)
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4.3.4
        with:
          name: p4a-signed-apk
          path: ./*.apk
