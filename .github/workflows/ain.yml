name: Build Kivy Android App (Final Guaranteed Fix)

on:
  push:
    branches: [ "main", "master" ]

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
    # ধাপ ১: কোড চেকআউট করা
    - name: Checkout code
      uses: actions/checkout@v4

    # ধাপ ২: Java (JDK 17) সেটআপ করা
    - name: Set up Java (JDK 17)
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    # ধাপ ৩: Python 3.9 সেটআপ করা
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    # ধাপ ৪: Android SDK এবং NDK সেটআপ করা
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    # ধাপ ৫: Buildozer এবং প্রয়োজনীয় লাইব্রেরি ইনস্টল করা
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install "cython==0.29.36"
        pip install buildozer

    # ধাপ ৬: Buildozer দিয়ে অ্যান্ড্রয়েড ডিবাগ APK তৈরি করা
    # --- এটিই মূল সমাধান: Buildozer কে আগে থেকে ইনস্টল করা SDK ব্যবহারে বাধ্য করা ---
    - name: Build with Buildozer
      run: |
        # ANDROID_SDK_ROOT এবং ANDROID_NDK_ROOT ভেরিয়েবলগুলো Buildozer-কে SDK পুনরায় ডাউনলোড করা থেকে বিরত রাখে।
        # $ANDROID_HOME এবং $ANDROID_NDK_HOME ভেরিয়েবলগুলো আগের ধাপে (Setup Android SDK) সেট করা হয়েছে।
        export ANDROID_SDK_ROOT=$ANDROID_HOME
        export ANDROID_NDK_ROOT=$ANDROID_NDK_HOME
        
        buildozer --version
        buildozer --verbose android debug

    # ধাপ ৭: বিল্ড হওয়া APK ফাইলটিকে আর্টিফ্যাক্ট হিসেবে আপলোড করা
    - name: Upload Artifact (APK)
      uses: actions/upload-artifact@v4
      with:
        name: freefire-mobile-apk
        path: bin/*.apk
        
