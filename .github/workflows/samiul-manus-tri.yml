# ফাইলের নাম: .github/workflows/main.yml

name: Build Android AAB with Start.io Ads

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-android:
    name: Build AAB with P4A
    runs-on: ubuntu-22.04

    steps:
      # ধাপ ১: রিপোজিটরির কোড চেকআউট করা
      - name: Checkout repository
        uses: actions/checkout@v4

      # ধাপ ২: Java 17 সেটআপ করা
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # ধাপ ৩: সরাসরি NDK 25b ডাউনলোড এবং সেটআপ করা
      - name: Download and set up NDK 25b
        id: setup_ndk
        run: |
          wget https://dl.google.com/android/repository/android-ndk-r25b-linux.zip
          unzip -q android-ndk-r25b-linux.zip
          echo "ANDROID_NDK_HOME=$(pwd)/android-ndk-r25b" >> $GITHUB_ENV
          echo "NDK path set to: $(pwd)/android-ndk-r25b"

      # ধাপ ৪: Python 3.11 এবং প্রয়োজনীয় লাইব্রেরি ইনস্টল করা
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install "cython<3.0"
          pip install kivy==2.3.0
          pip install python-for-android==2024.1.21

      # ধাপ ৫: Start.io Ads SDK ডাউনলোড করা (সবচেয়ে গুরুত্বপূর্ণ নতুন ধাপ)
      - name: Download Start.io Ads SDK
        run: |
          # SDK-এর জন্য একটি ফোল্ডার তৈরি করা
          mkdir -p libs
          # Start.io In-App Ads SDK ডাউনলোড করা (ভার্সন প্রয়োজন অনুযায়ী পরিবর্তন করতে পারেন)
          wget https://start.io/publishers/sdk/inapp-sdk.aar -O libs/inapp-sdk.aar
          echo "Start.io SDK downloaded to libs/inapp-sdk.aar"

      # ধাপ ৬: Keystore তৈরি করা
      - name: Create Keystore
        env:
          KEY_PASSWORD: ${{ secrets.RELEASE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.RELEASE_ALIAS }}
        run: |
          keytool -genkey -v -keystore release.keystore -alias $KEY_ALIAS -keyalg RSA -keysize 2048 -validity 10000 -storepass $KEY_PASSWORD -keypass $KEY_PASSWORD -dname "CN=Md Samiul Islam, OU=Development, O=SamiulDev, L=Dhaka, ST=Dhaka, C=BD" -noprompt

      # ধাপ ৭: P4A দিয়ে AAB (Android App Bundle) বিল্ড করা
      - name: Build AAB with P4A
        env:
          KEY_PASSWORD: ${{ secrets.RELEASE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.RELEASE_ALIAS }}
        run: |
          p4a aab \
            --requirements=python3,kivy==2.3.0,jnius,sqlite3,openssl \
            --package=com.samiul.minifire \
            --name="MINI FIRE" \
            --version=1.0.0 \
            --bootstrap=sdl2 \
            --dist_name=minifire \
            --arch=arm64-v8a \
            --orientation=portrait \
            --window \
            --release \
            --android-api=34 \
            --permission=INTERNET \
            --permission=ACCESS_NETWORK_STATE \
            --add-aar=libs/inapp-sdk.aar \
            --keystore=release.keystore \
            --keystore-password="$KEY_PASSWORD" \
            --signkey-alias="$KEY_ALIAS" \
            --signkey-password="$KEY_PASSWORD" \
            --private=.

      # ধাপ ৮: বিল্ড হওয়া AAB ফাইল আপলোড করা
      - name: Upload AAB Artifact
        uses: actions/upload-artifact@v4
        with:
          name: p4a-signed-aab
          path: ./*.aab
