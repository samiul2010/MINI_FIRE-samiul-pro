name: Build Android APK with P4A(samiul)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-android:
    name: Build APK with Python-for-Android
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Compatible NDK 25b
        run: |
          wget -q https://dl.google.com/android/repository/android-ndk-r25b-linux.zip
          unzip -q android-ndk-r25b-linux.zip
          echo "CUSTOM_NDK_PATH=$(pwd)/android-ndk-r25b" >> $GITHUB_ENV

      - name: Clean P4A Cache
        run: |
          rm -rf ~/.local/share/python-for-android
          rm -rf ~/.cache/python-for-android
          rm -rf ~/.p4a

      - name: Set up Android SDK and NDK
        run: |
          echo "Using system Android tools:"
          echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
          echo "CUSTOM_NDK_PATH: $CUSTOM_NDK_PATH"
          
          # Accept Android licenses
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git \
            openjdk-11-jdk \
            python3-pip \
            python3-venv \
            autoconf \
            build-essential \
            libssl-dev \
            libffi-dev \
            zlib1g-dev \
            libncurses5-dev \
            wget \
            curl \
            unzip \
            zip

      - name: Set up Python and P4A
        run: |
          python3 --version
          pip3 install --upgrade pip virtualenv
          
          # Install python-for-android with Cython
          pip3 install python-for-android cython==0.29.33
          
          # Install app requirements
          pip3 install kivy buildozer

      - name: Create Keystore
        env:
          KEY_PASSWORD: ${{ secrets.RELEASE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.RELEASE_ALIAS }}
        run: |
          keytool -genkey -v \
            -keystore release.keystore \
            -alias $KEY_ALIAS \
            -keyalg RSA -keysize 2048 -validity 10000 \
            -storepass $KEY_PASSWORD \
            -keypass $KEY_PASSWORD \
            -dname "CN=Md Samiul Islam, OU=Development, O=SamiulDev, L=Dhaka, ST=Dhaka, C=BD" \
            -noprompt

      - name: Create p4a build script with fixed NDK
        run: |
          cat > build_apk.sh << 'EOF'
          #!/bin/bash
          
          # Set Android environment with OUR NDK
          export ANDROIDSDK="$ANDROID_SDK_ROOT"
          export ANDROIDNDK="$CUSTOM_NDK_PATH"
          export ANDROID_NDK_HOME="$CUSTOM_NDK_PATH"
          export ANDROID_API="33"
          
          # Clean previous builds
          rm -rf build/ dist/
          
          # Create dist directory
          mkdir -p dist
          
          echo "Using NDK: $ANDROIDNDK"
          
          # Build with p4a using our NDK
          p4a apk \
            --requirements=python3,kivy \
            --package=org.samiul.minifire \
            --name="MINI FIRE" \
            --version=1.0.0 \
            --bootstrap=sdl2 \
            --dist_name=minifire \
            --sdk_dir="$ANDROIDSDK" \
            --ndk_dir="$ANDROIDNDK" \
            --android_api=33 \
            
            --arch=arm64-v8a \
            --arch=armeabi-v7a \
            --orientation=portrait \
            --window \
            --release \
            --keystore=release.keystore \
            --keystore-passwd:$KEY_PASSWORD \
            --signkey-alias=$KEY_ALIAS \
            
          
          echo "Build completed!"
          EOF
          
          chmod +x build_apk.sh

      - name: Build APK with P4A
        env:
          KEY_PASSWORD: ${{ secrets.RELEASE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.RELEASE_ALIAS }}
          CUSTOM_NDK_PATH: ${{ env.CUSTOM_NDK_PATH }}
        run: |
          echo "Starting P4A build with NDK 25b..."
          echo "NDK Path: $CUSTOM_NDK_PATH"
          ./build_apk.sh

      - name: Check for APK files
        run: |
          echo "Checking for built APK files..."
          find . -name "*.apk" -type f | head -10
          ls -la dist/ 2>/dev/null || echo "No dist directory"
          ls -la ./*.apk 2>/dev/null || echo "No APK files in root"
          ls -la ~/.local/share/python-for-android/dists/minifire/dist/*.apk 2>/dev/null || echo "No APK in P4A dist"

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: p4a-apk
          path: |
            *.apk
            dist/*.apk
            bin/*.apk
            ~/.local/share/python-for-android/dists/minifire/dist/*.apk
          retention-days: 7

      - name: Upload Build Logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: p4a-logs
          path: |
            .p4a/
            build/
          retention-days: 3
