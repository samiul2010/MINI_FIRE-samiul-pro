# ফাইলের নাম: .github/workflows/main.yml

name: Build Android APK with Python-for-Android

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-android:
    name: Build APK with Python-for-Android
    runs-on: ubuntu-22.04

    steps:
      # ধাপ ১: রিপোজিটরির কোড চেকআউট করা
      - name: Checkout repository
        uses: actions/checkout@v4

      # ধাপ ২: Java 17 সেটআপ করা (মূল সমাধান)
      # Android SDK Manager-এর জন্য Java 17 প্রয়োজন
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # ধাপ ৩: Android SDK এবং NDK 25b ইনস্টল করা
      # android-actions/setup-android অ্যাকশনটি এখন সঠিকভাবে কাজ করবে
      - name: Set up Android SDK and NDK
        uses: android-actions/setup-android@v3
        with:
          # packages ইনপুট ব্যবহার করে নির্দিষ্ট ভার্সন ইনস্টল করা
          packages: 'ndk;25.2.9519653'

      # ধাপ ৪: Python এবং প্রয়োজনীয় লাইব্রেরি ইনস্টল করা
      - name: Set up Python and P4A
        uses: actions/setup-python@v5
        with:
          python-version: '3.9' # একটি স্থিতিশীল পাইথন ভার্সন
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install "cython<3.0" # Cython 3+ এর সাথে p4a এর কিছু সামঞ্জস্যতার সমস্যা আছে
          pip install python-for-android kivy==2.1.0

      # ধাপ ৫: Keystore তৈরি করা
      - name: Create Keystore
        env:
          KEY_PASSWORD: ${{ secrets.RELEASE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.RELEASE_ALIAS }}
        run: |
          keytool -genkey -v -keystore release.keystore -alias $KEY_ALIAS -keyalg RSA -keysize 2048 -validity 10000 -storepass $KEY_PASSWORD -keypass $KEY_PASSWORD -dname "CN=Md Samiul Islam, OU=Development, O=SamiulDev, L=Dhaka, ST=Dhaka, C=BD" -noprompt

      # ধাপ ৬: P4A দিয়ে APK বিল্ড করা
      - name: Build APK with P4A
        env:
          KEY_PASSWORD: ${{ secrets.RELEASE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.RELEASE_ALIAS }}
        run: |
          p4a apk \
            --requirements=python3,kivy==2.1.0,android,jnius,sqlite3,openssl,requests,pillow,pyjnius \
            --package=com.samiul.minifire \
            --name="MINI FIRE" \
            --version=1.0.0 \
            --bootstrap=sdl2 \
            --dist_name=minifire \
            --arch=arm64-v8a \
            --orientation=portrait \
            --window \
            --release \
            --keystore=release.keystore \
            --keystore-password="$KEY_PASSWORD" \
            --signkey-alias="$KEY_ALIAS" \
            --signkey-password="$KEY_PASSWORD" \
            --private=.

      # ধাপ ৭: বিল্ড হওয়া APK ফাইল আপলোড করা
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: p4a-signed-apk
          path: ./*.apk
          
