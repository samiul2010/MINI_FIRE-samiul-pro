# ফাইলের নাম: .github/workflows/main.yml

name: Build Kivy Android App (Release APK)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-android:
    name: Build Signed Release APK with Buildozer
    runs-on: ubuntu-22.04

    steps:
      # ধাপ ১: রিপোজিটরির কোড চেকআউট করা
      - name: Checkout repository
        uses: actions/checkout@v4

      # ধাপ ২: স্বয়ংক্রিয়ভাবে Keystore তৈরি করা
      - name: Generate Keystore
        env:
          RELEASE_PASSWORD: ${{ secrets.RELEASE_PASSWORD }}
          RELEASE_ALIAS: ${{ secrets.RELEASE_ALIAS }}
        run: |
          keytool -genkey -v -keystore release.keystore -alias $RELEASE_ALIAS -keyalg RSA -keysize 2048 -validity 10000 -storepass $RELEASE_PASSWORD -keypass $RELEASE_PASSWORD -dname "CN=Md Samiul Islam, OU=Development, O=SamiulDev, L=Dhaka, ST=Dhaka, C=BD" -noprompt

      # ধাপ ৩: buildozer.spec ফাইলে রিলিজ বিল্ডের জন্য তথ্য যোগ করা
      - name: Update buildozer.spec for release
        env:
          RELEASE_PASSWORD: ${{ secrets.RELEASE_PASSWORD }}
          RELEASE_ALIAS: ${{ secrets.RELEASE_ALIAS }}
        run: |
          sed -i 's|^#android.release_key.store =|android.release_key.store = release.keystore|' buildozer.spec
          sed -i 's|^#android.release_key.alias =|android.release_key.alias = ${{ env.RELEASE_ALIAS }}|' buildozer.spec
          sed -i 's|^#android.release_key.store_password =|android.release_key.store_password = ${{ env.RELEASE_PASSWORD }}|' buildozer.spec
          sed -i 's|^#android.release_key.alias_password =|android.release_key.alias_password = ${{ env.RELEASE_PASSWORD }}|' buildozer.spec
          
          # নিশ্চিত করা হচ্ছে যে সঠিক NDK ভার্সন ব্যবহৃত হচ্ছে
          if ! grep -q "android.ndk = 25b" buildozer.spec; then
            echo "" >> buildozer.spec
            echo "# Force specific NDK version to avoid 'ALooper_pollAll' error" >> buildozer.spec
            echo "android.ndk = 25b" >> buildozer.spec
          fi

      # ধাপ ৪: Buildozer ব্যবহার করে APK বিল্ড করা (সবচেয়ে নির্ভরযোগ্য পদ্ধতি)
      - name: Build with Buildozer
        uses: docker://kivy/buildozer
        with:
          entrypoint: /bin/bash
          args: -c "chown -R $(id -u):$(id -g) . && buildozer android release"

      # ধাপ ৫: বিল্ড হওয়া APK ফাইলটিকে আর্টিফ্যাক্ট হিসেবে আপলোড করা
      - name: Upload Signed APK
        uses: actions/upload-artifact@v4
        with:
          name: signed-release-apk
          path: bin/*.apk
          
